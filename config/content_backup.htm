<h1>有關本網站</h1>
<p>這門課程在教導學員如何利用網際環境管理與工程應用相關的內容管理.</p>
<p>總共使用兩套網際內容管理系統:</p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a></p>
<p style="padding-left: 30px;"><a href="https://www.blogger.com/">https://www.blogger.com/</a> </p>
<p>Please use your student number to <a href="https://github.com/join">register a github account</a>.</p>
<p>請利用學號註冊一個 Github 帳號</p>
<p>Repository (倉儲): <a href="https://github.com/mdecourse/wcmj2020">https://github.com/mdecourse/wcmj2020</a> </p>
<p>Project (專案): <a href="https://github.com/mdecourse/wcmj2020/projects/1">https://github.com/mdecourse/wcmj2020/projects/1</a> </p>
<p>Gitter (討論區): <a href="https://gitter.im/mdecourse/wcmj2020">https://gitter.im/mdecourse/wcmj2020</a> </p>
<p>Web site (網站): <a href="https://mde.tw/wcmj2020">https://mde.tw/wcmj2020</a> </p>
<p>Blog (網誌): <a href="https://mde.tw/wcmj2020/blog">https://mde.tw/wcmj2020/blog</a> </p>
<p>Presentation (簡報): <a href="https://mde.tw/wcmj2020/reveal">https://mde.tw/wcmj2020/reveal</a> </p>
<p>電腦輔助設計室與協同設計室行事曆</p>
<p><a href="https://calendar.google.com/calendar/embed?src=mde.nfu.edu.tw_3439313938333136353439%40resource.calendar.google.com&amp;ctz=Asia%2FTaipei&amp;mode=week&amp;src=mde.nfu.edu.tw_35303530373431313438%40resource.calendar.google.com&amp;ctz=Asia%2FTaipei">全頁檢視</a></p>
<p><iframe height="600" src="https://calendar.google.com/calendar/embed?src=mde.nfu.edu.tw_3439313938333136353439%40resource.calendar.google.com&amp;ctz=Asia%2FTaipei&amp;mode=week&amp;src=mde.nfu.edu.tw_35303530373431313438%40resource.calendar.google.com&amp;ctz=Asia%2FTaipei" width="800"></iframe></p>
<p>請登入 gm 電子郵箱後, 填寫下列表單:</p>
<p style="padding-left: 30px;"><a href="https://docs.google.com/forms/d/e/1FAIpQLSfetOEX-l_KYPUZuUuPft5IC1t-FttkoX1s_Nh9FRxYZXKYWA/viewform?usp=sf_link">選課學員基本資料</a></p>
<p style="padding-left: 30px;"><a href="https://docs.google.com/forms/d/e/1FAIpQLSdSvo89BOMfQOxFflhx-b3eDa_kYP0lUkTLfotdr1AEyQbItw/viewform?usp=sf_link">課程回饋表單</a></p>
<p style="padding-left: 30px;"><a href="https://docs.google.com/forms/d/e/1FAIpQLSfzbBnD7-GL2Nc41vmu2vGB6foETL0cNJpg7yrnMaHCqjRA9w/viewform?usp=sf_link">網際內容管理自評與互評表單</a></p>
<h2>CMSiMDE</h2>
<p><a href="https://github.com/mdecourse/cmsimde.git">https://github.com/mdecourse/cmsimde.git</a> 是一套利用 Python 解譯程式語言所編寫的網際內容管理系統, 使用者可以用來建立動態網站, 靜態網站, 網誌與網際簡報系統.</p>
<p>程式語言就其執行的方式, 可以分為編譯式與解譯式等兩種.</p>
<p>編譯式語言例如: C 程式語言</p>
<p>解譯式語言例如: Python 程式語言</p>
<p>編寫程式語言是工程師與電腦溝通的途徑之一, 工程師編寫計算機程式在電腦上執行, 可以透過電腦強大與重複的運算能力來解決問題.</p>
<p>CMSiMDE 就是工程師希望將各種與產品開發的過程資料, 存放在網站上, 除了可用於工程師之間的溝通外, 還能夠將產品開發的細節, 或者特定工具的使用詳細記錄, 以作為往後的參考.</p>
<h4>如何使用 CMSiMDE</h4>
<p>以子模組的方式使用 CMSiMDE</p>
<p>將 Github 倉儲 git clone 到近端工作區之後, 可以利用 git submodule add 指令將遠端倉儲中的 CMSiMDE 程式碼納為倉儲中的 cmsimde 子目錄, 並且保持與遠端原始碼的版次關聯 (也就是能夠指定採用遠端特定版本的 CMSiMDE 程式碼).</p>
<p style="padding-left: 30px;">好處: 子模組可以與遠端官方的倉儲保持關聯, 一旦 CMSiMDE 更新版本, 使用者可以利用 git pull 直接拉下遠端 CMSiMDE 的最新程式碼.</p>
<p style="padding-left: 30px;">壞處: 使用者若要 git clone 遠端的倉儲至近端, 需要加上 --recurse-submodules 選項</p>
<p>不以子模組的方式使用 CMSiMDE</p>
<p>假如不需要保持與遠端 CMSiMDE 倉儲特定版次的關聯性, 可以直接將 CMSiMDE 倉儲中的檔案, 直接放入 cmsimde 目錄, 並將其中 up_dir 的內容複製到希望建立網頁的倉儲主目錄中即可.</p>
<p style="padding-left: 30px;">好處: 使用者可以直接使用 git clone 指令, 拉下遠端倉儲的所有資料.</p>
<p style="padding-left: 30px;">壞處: 失去與遠端 CMSiMDE 倉儲的關聯, 假如要使用最新改版後的 CMSiMDE 原始碼, 必須另外 git clone 然後再取代倉儲中 cmsimde 的所有檔案.</p>
<p></p>
<p></p><h3>可攜程式環境</h3>
<p>為了讓工程師可以在不同的 Windows 10 64 位元電腦上管理 CMSiMDE 網際內容管理系統, 因此需要 Python 解譯環境以及一個文字檔案的編輯器.</p>
<p>這裡所安裝的 Python 解譯器選擇由 C 所編寫的 CPython, 可以從 <a href="https://www.python.org/">https://www.python.org/</a>  下載安裝. 但是在此我們要將 Python 解譯系統配置在 USB 隨身碟上, 使用者可以隨身攜帶, 一旦配置完成後, 可以在任何一台 Windows 10 64 位元的筆電或電腦上執行 Python 或 C 程式.</p>
<p>可攜 Python 程式環境的建立步驟:</p>
<p style="padding-left: 30px;">安裝 Python 套件時, 不要安裝 pip, 之後將 Python38 目錄複製到 data 目錄中, 然後建立 start.bat 指定使用可攜系統中的 Python, 之後再利用 g<a href="https://www.google.com/url?sa=t&amp;rct=j&amp;q=&amp;esrc=s&amp;source=web&amp;cd=1&amp;ved=2ahUKEwivpbG6gfHoAhURrZQKHUT8ARcQFjAAegQIAhAB&amp;url=https%3A%2F%2Fbootstrap.pypa.io%2Fget-pip.py&amp;usg=AOvVaw0zKVO_zW0nkF7s0zdjWFNj">et-pip.py,</a> 以命令列中的 python get-pip.py 安裝 pip.</p>
<p>可攜 Tiny C 程式環境的建立步驟:</p>
<p style="padding-left: 30px;">從 <a href="https://bellard.org/tcc/">https://bellard.org/tcc/</a> 下載 Tiny C, 將 tcc 解開壓縮後放到 data 目錄中. 然後修改 wscite 目錄中的 cpp.properties, 使用 Tiny C 類解譯 .c 程式.</p>
<p>選用的文字編輯器: <a href="https://www.scintilla.org/SciTE.html">https://www.scintilla.org/SciTE.html</a></p>
<p>建立完成的可攜程式環境:</p>
<p style="padding-left: 30px;"><span style="text-decoration: line-through;">下載 <a href="https://drive.google.com/open?id=1SvMKQFViJ0mskt20UhSqkjzckB3noSJH">wcm2020_w2.7z (舊資料)</a></span></p>
<p style="padding-left: 30px;">請重新下載 <a href="https://drive.google.com/open?id=1xDTDfcHU18ipqZNbOufMkSZqibqNeL2T">wcmj2020_tool.7z</a>, 檔案大小為 435 MB, 解開壓縮後為 1.8 GB (其中包括 Mypaint, Dia 與 OBS 等)</p>
<p style="padding-left: 30px;">將 wcmj2020_tool.7z 解壓縮到隨身碟或電腦硬碟中, 將 home 與 home_ipv6 目錄中的 .gitconfig user.name 與 user.email 改為自己的 Github 帳號與 email 後, 利用 start.bat 啟動可攜系統, 利用 stop.bat 關閉可攜系統.</p><h3>簡單的 C 程式</h3>
<p>前面所打造的可攜 Python 程式環境, 包括 SciTE 文字編輯器, 只要再加上 <a href="https://bellard.org/tcc/">https://bellard.org/tcc/</a>, 可將此一可攜環境設置成能夠編譯與類解譯 ANSI C 程式的環境</p>
<p>helloworld.c</p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">#include &lt;stdio.h&gt;

int main() {
	printf("hello world\n");
	return 'c';
}</pre>
<p>max.c</p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;

int max(int,int);
int min(int,int);

int main() {

    int i,numbers_len;

    printf("How many numbers? ");
    scanf("%d",&amp;numbers_len);

    //int numbers[numbers_len]; //in this context this two lines are equivalent
    int *numbers = (int*)malloc(numbers_len*sizeof(int));

    for (i=0;i&lt;numbers_len;i++) {
        printf("N[%d] = ",i);
        scanf("%d",numbers+i);
        /* scanf("%d",&amp;numbers[i]); */
    }

    int big = *numbers;
    int small = numbers[0];
    for (i=1;i&lt;numbers_len;i++) {
        big = max(big,*(numbers+i));
        small = min(small,numbers[i]);
    }

    printf("The small number is %d\n",small);
    printf("The big number is %d\n",big);
}

int max(int n1, int n2) {
    // return the biggest number between n1 and n2
    return n1&gt;n2?n1:n2;
}

int min(int n1, int n2) {
    // return the smallest number between n1 and n2
    return n1&lt;n2?n1:n2;
}</pre>
<p></p><h3>簡單的 Python 程式</h3>
<p>for.py</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">for i in range(10):
	print("使用 Python")</pre>
<p></p><h1>分組</h1>
<h4>亂數分組:</h4>
<p><a href="https://mde.tw/wcmj2020/downloads/2020spring_wcmj_1a_list.txt">https://mde.tw/wcmj2020/downloads/2020spring_wcmj_1a_list.txt</a> was taken from <a href="https://osa.nfu.edu.tw/">https://osa.nfu.edu.tw/</a> on Feb. 19, 2020.</p>
<p>The most updated list: <a href="http://s1.mde.nfu.edu.tw:8000/?semester=1082&amp;courseno=2418">http://s1.mde.nfu.edu.tw:8000/?semester=1082&amp;courseno=2418</a> </p>
<p>semester: 1082</p>
<p>courseno: 2418</p>
<p>Under https protocol use port 7443, for http use port 8000.</p>
<p>學員名單 URL: <input id="studListUrl" size="70" type="text" value="http://s1.mde.nfu.edu.tw:8000/?semester=1082&amp;courseno=2418 "/><br/> <input id="submit" type="submit" value="開始分組"/><br/> <textarea cols="80" id="output" rows="10"></textarea></p>
<script src="https://mde.tw/wcmj2020/downloads/dart_ex/even_grouping/evenGrouping.js"></script>
<p><a href="https://dartpad.github.io/embed-html.html?gh_owner=mdecourse&amp;gh_repo=cd2020&amp;gh_path=downloads/dart_ex/even_grouping&amp;theme=dark">Dart source code for random grouping</a></p>
<h4>evenGrouping.dart:</h4>
<pre class="brush:dart;auto-links:false;toolbar:false" contenteditable="false">import 'dart:html';
 
  InputElement studListUrl = querySelector("#studListUrl");
  String studUrl;
  // 將 Label 改為 Textarea, 避免產生過程結果嵌入所在頁面
  TextAreaElement output = querySelector("#output");
 
main() {
  querySelector("#submit").onClick.listen((e) =&gt; grouping());
}
 
grouping() {
  output.innerHtml = "";
 
  if (studListUrl.value != "") {
    studUrl = studListUrl.value;
  } else {
    studUrl = 'https://mde.tw/group/downloads/2019fall_cp_1a_list.txt';
  }
 
  // 組序由 1 開始
  int gth = 1;
  // 迴圈序號變數
  int i;
  int j;
  int total;
  int inc;
  // 每組學員暫存數列
  var gpList = [];
  // 全班分組數列
  var group = [];
  // 各組人數數列
  var numList = [];
  var courseTitle = 'wcmj2020';
 
  HttpRequest.getString(studUrl).then((String resp) {
    // 利用 trim() 去除字串最後的跳行符號, 之後再利用 split() 根據 \n 轉為數列
    var studList = resp.trim().split("\n");
    // 數列利用 shuffle() 方法以隨機方法弄亂順序
    studList.shuffle();
    total = studList.length;
    output.text += "全班總計" + total.toString() + " 人\n";
    numList = getNumList(studList.length);
    inc = 0;
    for (i in numList){
      // 列印區隔符號
      output.text += '=' * 20 + "\n";
      output.text += "group $gth 有 " + i.toString() + " 人: \n";
      gpList = [];
      for (j = 0; j &lt; i; j++){
        output.text += studList[j+inc] + "\n";
        // 在各分組數列中加入將對應的學員學號
        gpList.add(studList[j+inc]);
      }
      gth = gth + 1;
      inc = inc + j;
        //output.text += studList[j] + "\n";
        // 逐步將各組暫存的分組數列加入全班分組數列中
      gpList.sort();
      group.add(gpList);
    }
    // 列出全班分組數列
    output.text += group.toString() + "\n";
    // 列出已經排序後的分組名單
    output.text += '=' * 25 + "\n";
    output.text += '以下為排序後的各組成員名單: \n';
    gth = 1;
    /*
    404231
    s4052
    4062
    s4072
    4082
    5072
    5083
    */
    // 先列出純文字以 \n 跳行組員資料
    for (i=0; i &lt; group.length; i++){
      // 列印區隔符號
      output.text += '=' * 20 + "\n";
      output.text += "group $gth \n";
      gpList = [];
      for (j=0; j &lt; group[i].length; j++){
        output.text += group[i][j] + "\n";
      }
      gth = gth + 1;
    }
    
    gth = 1;
    // 最後列出超文件以 &lt;br\&gt; 跳行組員資料, 包含倉儲與網站
    for (i=0; i &lt; group.length; i++){
      // 列印區隔符號
      output.text += '\n' + '=' * 30 + "&lt;br \&gt;";
      output.text += "group $gth &lt;br \&gt;";
      gpList = [];
      for (j=0; j &lt; group[i].length; j++){
          if (group[i][j].startsWith('4052') || group[i][j].startsWith('4072')) {
              output.text += "Repository: &lt;a href='https://github.com/s" + 
                                      group[i][j] + "/" + courseTitle + "'&gt;" + group[i][j] + 
                                      "&lt;/a&gt;" + " | Site: &lt;a href='https://s" + group[i][j] + 
                                      ".github.io/" + courseTitle + "'&gt;" + group[i][j] + 
                                      "&lt;/a&gt;&lt;br \&gt;";
          }
          else {
              output.text += "Repository: &lt;a href='https://github.com/" + 
                                      group[i][j] + "/" + courseTitle +"'&gt;" + group[i][j] + 
                                      "&lt;/a&gt;" + " | Site: &lt;a href='https://" + group[i][j] + 
                                      ".github.io/" + courseTitle + "'&gt;" + group[i][j] + 
                                      "&lt;/a&gt;&lt;br \&gt;";
          }
      }
      gth = gth + 1;
    }
  });
}
 
List getNumList(int total){
  // total student number
  // int total = 65;
  // initial each group expect to be "eachGrp" number of people
  int eachGrp = 10;
  // may divide into "grpNum" number of group
  int grpNum = total ~/ eachGrp;
  // vacant list
  var splits = [];
  // find remainder when total number divid into "grpNum" number of group
  int remainder = total % grpNum;
  // number of people in one group by calculation
  int calGrp = total ~/ grpNum;
 
  for (int i = 0; i &lt; grpNum; i++) {
    splits.add(calGrp);
  }
  //print(splits);
 
  for (int i = 0; i &lt; remainder; i++) {
    splits[i] += 1;
  }
  //print(splits);
  return splits;
 }</pre>
<h4>index.html:</h4>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;h1&gt;亂數分組:&lt;/h1&gt;
學員名單 URL: &lt;input type="text" id="studListUrl" size="50" value="https://mde.tw/wcm2020/downloads/2020spring_wcm_1a_list.txt"&gt;&lt;br /&gt;
&lt;input type="submit" value="開始分組" id="submit"&gt;&lt;br /&gt;
&lt;textarea id="output" cols="80" rows="10"&gt;&lt;/textarea&gt;</pre>
<h4>style.css:</h4>
<pre class="brush:css;auto-links:false;toolbar:false" contenteditable="false">body {
  color: white;
  font-size: 20px;
}

input, select, textarea {
font-size: 100%;
}</pre>
<h4>get_student.py</h4>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">from flask import Flask, request 
from flask_cors import CORS

import requests
import bs4
import ssl

'''
https://s1.mde.nfu.edu.tw:7443/?semester=1082&amp;courseno=0767
cd
2a 1082/0767
2b 1082/0780

2a 1072/0777
2b 1072/0790
2a 1062/0788
2a 1062/0802

wcm
1082/0744

1072/0754
1062/0765

wcmj
1082/2418
'''

app = Flask(__name__)
CORS(app)

@app.route('/studlist')
@app.route('/')
def studlist():
    semester = request.args.get('semester')
    courseno = request.args.get('courseno')
    if semester == None:
        semester = '1082'
    if courseno == None:
        courseno = '0744'
    
    url = 'https://osa.nfu.edu.tw/query/studlist_ajax.php'
    post_var = {'pselyr': semester, 'pseqno': courseno}

    result = requests.post(url, data = post_var)

    soup = bs4.BeautifulSoup(result.content, 'lxml')
    table = soup.find('table', {'class': 'tbcls'})
    data = []
    rows = table.find_all('tr')
    for row in rows:
        cols = row.find_all('td')
        cols = [ele.text.strip() for ele in cols]
        data.append([ele for ele in cols if ele]) # Get rid of empty values
    output = ""
    for i in data[2:]:
        #print(i[0])
        output +=i[0] + "\n"
    return output
    #return  str(pselyr) + " + " +str(pseqno)

# 即使在近端仍希望以 https 模式下執行
context = ssl.SSLContext(ssl.PROTOCOL_TLSv1_2)
context.load_cert_chain('localhost.crt', 'localhost.key')

# 取 flaskapp.py 中的 uwsgi 變數設定
uwsgi = False
if uwsgi:
    # 表示程式在雲端執行
    application = app
else:
    # 表示在近端執行, 以 python3 wsgi.py 執行
    app.run(host='127.0.0.1', port=5443, debug=True, ssl_context=context)
</pre>
<h4>nginx sites-available/default settings:</h4>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">server {
    listen 8000;
    server_name s1.mde.nfu.edu.tw;
    charset utf-8;
    
    listen 7443 ssl;
 
    location /static {
        alias /home/kmol2019/course_studlist/static/;
    }
 
    location / {
        include uwsgi_params;
        uwsgi_pass  127.0.0.1:8087;
    }
    
    ssl_certificate /etc/stunnel/localhost.crt;
    ssl_certificate_key /etc/stunnel/localhost.key;
    ssl_session_timeout 5m;
    ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers "HIGH:!aNULL:!MD5 or HIGH:!aNULL:!MD5:!3DES";
    ssl_prefer_server_ciphers on;
    try_files $uri $uri/ =404;
}</pre>
<h4>uwsgi7.ini</h4>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">[uwsgi]
socket = 127.0.0.1:8087
uid = kmol2019
gid = kmol2019
plugins-dir = /usr/lib/uwsgi/plugins/
plugin = python3
master = true
logto = /var/log/uwsgi/emperor.log
logfile-chown = kmol2019:kmol2019
processes = 4
threads = 2
chdir = /home/kmol2019/course_studlist
wsgi-file = /home/kmol2019/course_studlist/get_student.py</pre>
<h4>/etc/systemd/system/cmsimfly.service</h4>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">[Unit]
Description=uWSGI to serve CMSimfly
After=network.target

[Service]
User=kmol2019
Group=kmol2019
WorkingDirectory=/home/kmol2019/uwsgi_ini
ExecStart=/usr/local/bin/uwsgi --emperor /home/kmol2019/uwsgi_ini

[Install]
WantedBy=multi-user.target</pre><h2>分組結果</h2>
<p>==============================<br/>group 1 <br/>Repository: <a href="https://github.com/50833110/wcmj2020">50833110</a> | Site: <a href="https://50833110.github.io/wcmj2020">50833110</a><br/>Repository: <a href="https://github.com/50833112/wcmj2020">50833112</a> | Site: <a href="https://50833112.github.io/wcmj2020">50833112</a><br/>Repository: <a href="https://github.com/50833115/wcmj2020">50833115</a> | Site: <a href="https://50833115.github.io/wcmj2020">50833115</a><br/>Repository: <a href="https://github.com/50833123/wcmj2020">50833123</a> | Site: <a href="https://50833123.github.io/wcmj2020">50833123</a><br/>Repository: <a href="https://github.com/50833127/wcmj2020">50833127</a> | Site: <a href="https://50833127.github.io/wcmj2020">50833127</a><br/>Repository: <a href="https://github.com/50833128/wcmj2020">50833128</a> | Site: <a href="https://50833128.github.io/wcmj2020">50833128</a><br/>Repository: <a href="https://github.com/50833129/wcmj2020">50833129</a> | Site: <a href="https://50833129.github.io/wcmj2020">50833129</a><br/>Repository: <a href="https://github.com/50833131/wcmj2020">50833131</a> | Site: <a href="https://50833131.github.io/wcmj2020">50833131</a><br/>Repository: <a href="https://github.com/50833133/wcmj2020">50833133</a> | Site: <a href="https://50833133.github.io/wcmj2020">50833133</a><br/>Repository: <a href="https://github.com/50833138/wcmj2020">50833138</a> | Site: <a href="https://50833138.github.io/wcmj2020">50833138</a><br/> ==============================<br/>group 2 <br/>Repository: <a href="https://github.com/50833101/wcmj2020">50833101</a> | Site: <a href="https://50833101.github.io/wcmj2020">50833101</a><br/>Repository: <a href="https://github.com/50833107/wcmj2020">50833107</a> | Site: <a href="https://50833107.github.io/wcmj2020">50833107</a><br/>Repository: <a href="https://github.com/50833108/wcmj2020">50833108</a> | Site: <a href="https://50833108.github.io/wcmj2020">50833108</a><br/>Repository: <a href="https://github.com/50833111/wcmj2020">50833111</a> | Site: <a href="https://50833111.github.io/wcmj2020">50833111</a><br/>Repository: <a href="https://github.com/50833117/wcmj2020">50833117</a> | Site: <a href="https://50833117.github.io/wcmj2020">50833117</a><br/>Repository: <a href="https://github.com/50833119/wcmj2020">50833119</a> | Site: <a href="https://50833119.github.io/wcmj2020">50833119</a><br/>Repository: <a href="https://github.com/50833122/wcmj2020">50833122</a> | Site: <a href="https://50833122.github.io/wcmj2020">50833122</a><br/>Repository: <a href="https://github.com/50833126/wcmj2020">50833126</a> | Site: <a href="https://50833126.github.io/wcmj2020">50833126</a><br/>Repository: <a href="https://github.com/50833130/wcmj2020">50833130</a> | Site: <a href="https://50833130.github.io/wcmj2020">50833130</a><br/>Repository: <a href="https://github.com/50833134/wcmj2020">50833134</a> | Site: <a href="https://50833134.github.io/wcmj2020">50833134</a><br/> ==============================<br/>group 3 <br/>Repository: <a href="https://github.com/50833104/wcmj2020">50833104</a> | Site: <a href="https://50833104.github.io/wcmj2020">50833104</a><br/>Repository: <a href="https://github.com/50833106/wcmj2020">50833106</a> | Site: <a href="https://50833106.github.io/wcmj2020">50833106</a><br/>Repository: <a href="https://github.com/50833113/wcmj2020">50833113</a> | Site: <a href="https://50833113.github.io/wcmj2020">50833113</a><br/>Repository: <a href="https://github.com/50833114/wcmj2020">50833114</a> | Site: <a href="https://50833114.github.io/wcmj2020">50833114</a><br/>Repository: <a href="https://github.com/50833116/wcmj2020">50833116</a> | Site: <a href="https://50833116.github.io/wcmj2020">50833116</a><br/>Repository: <a href="https://github.com/50833118/wcmj2020">50833118</a> | Site: <a href="https://50833118.github.io/wcmj2020">50833118</a><br/>Repository: <a href="https://github.com/50833120/wcmj2020">50833120</a> | Site: <a href="https://50833120.github.io/wcmj2020">50833120</a><br/>Repository: <a href="https://github.com/50833125/wcmj2020">50833125</a> | Site: <a href="https://50833125.github.io/wcmj2020">50833125</a><br/>Repository: <a href="https://github.com/50833140/wcmj2020">50833140</a> | Site: <a href="https://50833140.github.io/wcmj2020">50833140</a><br/>Repository: <a href="https://github.com/50833141/wcmj2020">50833141</a> | Site: <a href="https://50833141.github.io/wcmj2020">50833141</a><br/> ==============================<br/>group 4 <br/>Repository: <a href="https://github.com/50833102/wcmj2020">50833102</a> | Site: <a href="https://50833102.github.io/wcmj2020">50833102</a><br/>Repository: <a href="https://github.com/50833103/wcmj2020">50833103</a> | Site: <a href="https://50833103.github.io/wcmj2020">50833103</a><br/>Repository: <a href="https://github.com/50833105/wcmj2020">50833105</a> | Site: <a href="https://50833105.github.io/wcmj2020">50833105</a><br/>Repository: <a href="https://github.com/50833109/wcmj2020">50833109</a> | Site: <a href="https://50833109.github.io/wcmj2020">50833109</a><br/>Repository: <a href="https://github.com/50833121/wcmj2020">50833121</a> | Site: <a href="https://50833121.github.io/wcmj2020">50833121</a><br/>Repository: <a href="https://github.com/50833124/wcmj2020">50833124</a> | Site: <a href="https://50833124.github.io/wcmj2020">50833124</a><br/>Repository: <a href="https://github.com/50833135/wcmj2020">50833135</a> | Site: <a href="https://50833135.github.io/wcmj2020">50833135</a><br/>Repository: <a href="https://github.com/50833136/wcmj2020">50833136</a> | Site: <a href="https://50833136.github.io/wcmj2020">50833136</a><br/>Repository: <a href="https://github.com/50833137/wcmj2020">50833137</a> | Site: <a href="https://50833137.github.io/wcmj2020">50833137</a><br/>Repository: <a href="https://github.com/50833139/wcmj2020">50833139</a> | Site: <a href="https://50833139.github.io/wcmj2020">50833139</a></p>
<h1>主題</h1>
<h4>Google Blogger</h4>
<p>Login to your gm email account and download <a href="https://drive.google.com/file/d/12Ypf02FVP9l7a9ufZfhRicN-rzCKkAf5/view?usp=sharing">2010_BeginningGoogleBlogger.pdf</a></p>
<h4>WCM</h4>
<p>Login to your gm email account and download<span> </span><a href="https://drive.google.com/file/d/1gLb9_6FEv58wVX2uShG_3sgUseFEcH_y/view?usp=sharing">2020wcm_topic_1.pdf</a>.</p>
<p style="padding-left: 30px;">What is a content management system?</p>
<p style="padding-left: 30px;">Analyzing your information life cycle.</p>
<p style="padding-left: 30px;">Overview of enterprise content management.</p>
<h4><span>Git</span></h4>
<p><span>Login to your gm email account and download<span> </span><a href="https://drive.google.com/file/d/1YkLWsDVRlScSuSBQv2Aa1JSjvbydJli-/view?usp=sharing">IntroductionToVersionControlAndGit.pdf</a>.</span></p>
<p style="padding-left: 30px;"><span>What is version control?</span></p>
<p style="padding-left: 30px;"><span>Git installation and setup.</span></p>
<p style="padding-left: 30px;"><span>Git getting started.</span></p>
<p style="padding-left: 30px;"><span>Commits and remote git.</span></p>
<h4><span>Github</span></h4>
<p><span>Login to your gm email account and download<span> </span><a href="https://drive.google.com/file/d/1vnkDLW1cg8hKEMUdjDstvWqiS4R1n3IC/view?usp=sharing">GithubPrimer.pdf</a></span></p>
<p><span>Login to your gm email account and download<span> </span><a href="https://drive.google.com/file/d/18MiM_d95ustohAqoUfx-gc-2dUE9Av0n/view?usp=sharing">ConflictsGUIToolAdvGit.pdf</a></span></p><h2>倉儲與網站</h2>
<ol>
<li>下載 <a href="https://drive.google.com/open?id=1SvMKQFViJ0mskt20UhSqkjzckB3noSJH">wcmj2020_tool.7z</a></li>
<li>建立 Github 倉儲</li>
<li>git clone 到近端</li>
<li>git submodule add <a href="https://github.com/mdecourse/cmsimde.git">https://github.com/mdecourse/cmsimde.git</a> cmsimde</li>
<li>在近端維護動態網站, 轉為靜態後 git add commit push</li>
</ol>
<p>Git </p>
<p></p>
<h2>繪圖</h2>
<p><a href="https://github.com/mypaint/mypaint">https://github.com/mypaint/mypaint</a></p>
<p><a href="https://github.com/mypaint/mypaint/wiki/v1.2-User-Manual">https://github.com/mypaint/mypaint/wiki/v1.2-User-Manual</a> </p>
<p><a href="/downloads/MyPaint筆刷說明.pdf">Mypaint筆刷說明.pdf</a></p>
<p></p><h2>W6</h2>
<h4>Online education</h4>
<p>線上直播: Youtube + Portable OBS</p>
<p>線上開會: <a href="https://meet.google.com">https://meet.google.com</a> </p>
<hr/>
<h4>讓手機可以利用電腦熱點上網</h4>
<p>採用 <a href="https://www.tp-link.com/us/home-networking/usb-adapter/tl-wn725n/">https://www.tp-link.com/us/home-networking/usb-adapter/tl-wn725n/</a></p>
<p>將此一 USB Wifi adapter 連接電腦後, 若網路為 IPv4 協定時, 可以透過"設定 -&gt; 網路和網際網路 -&gt; 行動熱點", 選擇開啟並編輯"網路名稱與網路密碼"後, 讓至多 8 台手機透過熱點連線上網.</p>
<p>但是因為目前 Windows 10 並<a href="https://answers.microsoft.com/en-us/windows/forum/all/support-ipv6-in-mobile-hotspot-network-sharing/8801ea57-c6dc-4c10-afe6-192879a85835">未提供 IPv6 網路協定下的網路熱點功能</a>, 因此在純 IPv6 網路協定下無法使用"行動熱點"服務.</p>
<hr/>
<p>利用手機鏡頭當作 webcam:</p>
<p>Android: <a href="https://www.digitalcitizen.life/turn-android-smartphone-webcam-windows">https://www.digitalcitizen.life/turn-android-smartphone-webcam-windows</a> <br/>iPhone: <a href="https://www.makeuseof.com/tag/use-your-iphone-as-a-webcam-heres-how-ios/">https://www.makeuseof.com/tag/use-your-iphone-as-a-webcam-heres-how-ios/</a> </p>
<hr/>
<h4>需要 clone 個人倉儲時:</h4>
<p style="padding-left: 30px;">git clone --recurse-submodules 倉儲_url.git</p>
<p>例如: git clone --recurse-submodules https://github.com/mdecourse/wcmj2020.git</p>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/5qTYqHULS7A" width="560"></iframe></p>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/xYZLwLaUG6U" width="560"></iframe></p><h2>W7</h2>
<h4>下載可攜程式系統</h4>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/IOauashmKho" width="560"></iframe></p>
<h4>利用 git 指令建立 cmsimde 網站</h4>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/NJTQulLMXnU" width="560"></iframe></p>
<h2>W8</h2>
<p>start.bat</p>
<p>加入</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">REM for putty
set GIT_HOME=%CDisk%:\portablegit\bin\
set GIT_SSH=%Disk%:\putty\plink.exe</pre>
<p>下載 y:\putty\plink</p>
<p>修改倉儲 push 的連線方式, 由 https 改為 ssh<br/>將要使用 ssh 連線的倉儲 .git 中的 config 檔案中的 url 設定改為 ssh 連線格式, 例如:</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">url = git@github.com:mdecourse/cad2019.git</pre>
<p>其中 mdecourse 為登入 github 的使用者帳號, cad2019 為倉儲名稱.</p>